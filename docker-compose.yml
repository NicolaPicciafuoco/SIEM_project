version: '3.9'

services:
  firewall:
    build: ./firewall-gw
    container_name: firewall-gw
    privileged: true
    networks:
      guest_net:
        ipv4_address: 10.10.1.254
      mgmt_net:
        ipv4_address: 10.10.2.254
      eth_net:
        ipv4_address: 10.10.3.254
      server_net:
        ipv4_address: 10.10.4.254
    cap_add:
      - NET_ADMIN
    volumes:
      - ./snort/snort.conf:/etc/snort/snort.conf  # File di configurazione per Snort
    command: [ "sh", "-c", "/usr/local/bin/fw-init.sh && snort -A console -c /etc/snort/snort.conf -i eth0" ]


  splunk:
    image: splunk/splunk:latest
    container_name: splunk
    environment:
      - SPLUNK_START_ARGS=--accept-license
      - SPLUNK_PASSWORD=Gruppo1!
    ports:
      - "8000:8000"  # Interfaccia web Splunk
    volumes:
      - splunk_data:/opt/splunk/var  # Log e configurazione persistenti
    networks:
      mgmt_net:
        ipv4_address: 10.10.2.13


  guest1:
    image: alpine
    container_name: guest1
    command: sh -c "apk add iputils traceroute libcap && sh /init-routes.sh && sleep infinity"
    networks:
      guest_net:
        ipv4_address: 10.10.1.11
    volumes:
      - ./firewall-gw/init-routes.sh:/init-routes.sh
    cap_add:
      - NET_ADMIN

  guest2:
    image: alpine
    container_name: guest2
    command: sh -c "apk add iputils traceroute libcap && sh /init-routes.sh && sleep infinity"
    networks:
      guest_net:
        ipv4_address: 10.10.1.12
    volumes:
      - ./firewall-gw/init-routes.sh:/init-routes.sh
    cap_add:
      - NET_ADMIN

  mgmt1:
    image: alpine
    container_name: mgmt1
    command: sh -c "apk add iputils traceroute libcap && sh /init-routes.sh && sleep infinity"
    networks:
      mgmt_net:
        ipv4_address: 10.10.2.11
    volumes:
      - ./firewall-gw/init-routes.sh:/init-routes.sh
    cap_add:
      - NET_ADMIN

  mgmt2:
    image: alpine
    container_name: mgmt2
    command: sh -c "apk add iputils traceroute libcap && sh /init-routes.sh && sleep infinity"
    networks:
      mgmt_net:
        ipv4_address: 10.10.2.12
    volumes:
      - ./firewall-gw/init-routes.sh:/init-routes.sh
    cap_add:
      - NET_ADMIN

  eth1:
    image: alpine
    container_name: eth1
    command: sh -c "apk add iputils traceroute libcap && sh /init-routes.sh && sleep infinity"
    networks:
      eth_net:
        ipv4_address: 10.10.3.11
    volumes:
      - ./firewall-gw/init-routes.sh:/init-routes.sh
    cap_add:
      - NET_ADMIN

  eth2:
    image: alpine
    container_name: eth2
    command: sh -c "apk add iputils traceroute libcap && sh /init-routes.sh && sleep infinity"
    networks:
      eth_net:
        ipv4_address: 10.10.3.12
    volumes:
      - ./firewall-gw/init-routes.sh:/init-routes.sh
    cap_add:
      - NET_ADMIN

  core-server:
    image: nginx:alpine
    container_name: core-server
    networks:
      server_net:
        ipv4_address: 10.10.4.100

networks:
  guest_net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.1.0/24
  mgmt_net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.2.0/24
  eth_net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.3.0/24
  server_net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.4.0/24
volumes:
    splunk_data:
        driver: local