version: '3.9'

services:
  firewall:
    build: ./firewall-gw
    container_name: firewall-gw
    privileged: true
    user: root
    networks:
      guest_net:
        ipv4_address: 10.10.1.254
      mgmt_net:
        ipv4_address: 10.10.2.254
      eth_net:
        ipv4_address: 10.10.3.254
      server_net:
        ipv4_address: 10.10.4.254
      int_net:
        ipv4_address: 10.10.5.254
    cap_add:
      - NET_ADMIN
    volumes:
      - snort_logs:/var/log/snort
      - ./firewall-gw/snort/snort.conf:/etc/snort/snort.conf  # File di configurazione per Snort
      - ./firewall-gw/snort/rules:/etc/snort/rules  # Monta la cartella delle regole
      - squid_logs:/var/log/squid # Monta i log di Squid in sola lettura
      - postgres_logs:/var/log/postgresql # Monta i log di PostgreSQL in sola lettura
      - squid_blacklist:/etc/squid
      - pdp_logs:/var/log
    # command: [ "sh", "-c", "/usr/local/bin/fw-init.sh && snort -A console -c /etc/snort/snort.conf -i eth0" ]
    # command: ["sh", "-c", "mkdir -p /var/log/snort && touch /var/log/snort/snort.log && service rsyslog start && snort -c /etc/snort/snort.conf -i any -l /var/log/snort"]
    depends_on:
      - core-server


  splunk:
    container_name: splunk
    build: ./splunk
    privileged: true
    user: root
    environment:
      - SPLUNK_START_ARGS=--accept-license
      - SPLUNK_PASSWORD=${SPLUNK_PASSWORD}
    ports:
      - "8000:8000"  # Interfaccia web Splunk
    volumes:
      - splunk_data:/opt/splunk/var
      - snort_logs:/var/log/snort
      - squid_logs:/var/log/squid
      - pdp_logs:/var/log
    #  - ./splunk:/opt/splunk/etc/system/local
    networks:
      eth_net:
        ipv4_address: 10.10.3.200
    depends_on:
      - firewall  # Assicurati che il firewall sia avviato prima di Splunk
    
  squid:
    image: sameersbn/squid:latest
    container_name: squid
    privileged: true
    user: root            # porta proxy
    ulimits:
      nofile:
        soft: 8192
        hard: 8192
    volumes:
      - squid_logs:/var/log/squid      # log di Squid
      - ./squid/squid.conf:/etc/squid/squid.conf # File di configurazione di Squid
      - squid_blacklist:/etc/squid # File di blacklist
    network_mode: "service:firewall"
    depends_on:
      - firewall  # Assicurati che il firewall sia avviato prima di Squid

  guest1:
    image: alpine
    container_name: guest1
    command: sh -c "apk add iputils traceroute libcap curl nmap hydra netcat-openbsd postgresql-client && sh /init-routes.sh && sleep infinity"
    networks:
      guest_net:
        ipv4_address: 10.10.1.11
    volumes:
      - ./firewall-gw/init-routes.sh:/init-routes.sh
      - ./attacker-scripts/:/attacker-scripts/
    cap_add:
      - NET_ADMIN

  guest2:
    image: alpine
    container_name: guest2
    command: sh -c "apk add iputils traceroute libcap curl nmap hydra netcat-openbsd postgresql-client && sh /init-routes.sh && sleep infinity"
    networks:
      guest_net:
        ipv4_address: 10.10.1.12
    volumes:
      - ./firewall-gw/init-routes.sh:/init-routes.sh
      - ./attacker-scripts/:/attacker-scripts/
    cap_add:
      - NET_ADMIN

  mgmt1:
    image: alpine
    container_name: mgmt1
    command: sh -c "apk add iputils traceroute libcap curl nmap hydra netcat-openbsd postgresql-client && sh /init-routes.sh && sleep infinity"
    networks:
      mgmt_net:
        ipv4_address: 10.10.2.11
    volumes:
      - ./firewall-gw/init-routes.sh:/init-routes.sh
      - ./attacker-scripts/:/attacker-scripts/
    cap_add:
      - NET_ADMIN

  mgmt2:
    image: alpine
    container_name: mgmt2
    command: sh -c "apk add iputils traceroute libcap curl nmap hydra netcat-openbsd postgresql-client && sh /init-routes.sh && sleep infinity"
    networks:
      mgmt_net:
        ipv4_address: 10.10.2.12
    volumes:
      - ./firewall-gw/init-routes.sh:/init-routes.sh
      - ./attacker-scripts/:/attacker-scripts/
    cap_add:
      - NET_ADMIN

  eth1:
    image: alpine
    container_name: eth1
    command: sh -c "apk add iputils traceroute libcap curl nmap hydra netcat-openbsd postgresql-client && sh /init-routes.sh && sleep infinity"
    networks:
      eth_net:
        ipv4_address: 10.10.3.11
    volumes:
      - ./firewall-gw/init-routes.sh:/init-routes.sh
      - ./attacker-scripts/:/attacker-scripts/
    cap_add:
      - NET_ADMIN

  eth2:
    image: alpine
    container_name: eth2
    command: sh -c "apk add iputils traceroute libcap curl nmap hydra netcat-openbsd postgresql-client && sh /init-routes.sh && sleep infinity"
    networks:
      eth_net:
        ipv4_address: 10.10.3.12
    volumes:
      - ./firewall-gw/init-routes.sh:/init-routes.sh
      - ./attacker-scripts/:/attacker-scripts/
    cap_add:
      - NET_ADMIN

  core-server:
    build: ./core-server
    container_name: core-server
    cap_add:
      - NET_ADMIN
    volumes:
      - ./firewall-gw/init-routes.sh:/init-routes.sh     # le tue rotte
      - postgres_logs:/var/log/postgresql
    networks:
      server_net:
        ipv4_address: 10.10.4.100
    # non esponiamo la 5432 allâ€™host: resta in interna server_net

  
  internet:
    image: alpine
    container_name: internet
    command: sh -c "apk add iputils traceroute libcap curl nmap hydra netcat-openbsd postgresql-client && sh /init-routes.sh && sleep infinity"
    networks:
      int_net:
        ipv4_address: 10.10.5.11
    volumes:
      - ./firewall-gw/init-routes.sh:/init-routes.sh
      - ./attacker-scripts/:/attacker-scripts/
    cap_add:
      - NET_ADMIN

networks:
  guest_net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.1.0/24
  mgmt_net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.2.0/24
  eth_net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.3.0/24
  server_net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.4.0/24
  int_net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.5.0/24

volumes:
    splunk_data:
      driver: local
    snort_logs:
      driver: local
    squid_logs:
      driver: local
    squid_blacklist:
      driver: local
    pdp_logs: 
      driver: local
